services:
  node1:
    image: rust:1.87
    container_name: blobasaur-node1
    # ports:
    #   - "6381:6379"
    #   - "7001:7000"
    volumes:
      - ../:/workspace
      - ./config.node1.toml:/app/config.toml:ro
      - node1_data:/app/data
      - cargo_cache:/usr/local/cargo/registry
    network_mode: host
    working_dir: /workspace
    environment:
      - RUST_LOG=info,blobasaur::cluster=debug
    command: >
      bash -c "
        echo 'Node1 Starting...';
        echo 'Hostname: $(hostname)';
        echo 'Network interfaces:';
        ip addr show;
        echo 'Checking binary compatibility...';
        if [ ! -f target/release/blobasaur ] || ! file target/release/blobasaur | grep -q 'ELF 64-bit LSB pie executable, x86-64'; then
          echo 'Building blobasaur for container architecture...';
          cargo build --release;
        else
          echo 'Using existing compatible binary...';
        fi;
        mkdir -p /app/data;
        echo 'Starting blobasaur node1...';
        exec ./target/release/blobasaur --config /app/config.toml
      "

  node2:
    image: rust:1.87
    container_name: blobasaur-node2
    # ports:
    #   - "6382:6379"
    #   - "7002:7000"
    volumes:
      - ../:/workspace
      - ./config.node2.toml:/app/config.toml:ro
      - node2_data:/app/data
      - cargo_cache:/usr/local/cargo/registry
    network_mode: host
    working_dir: /workspace
    environment:
      - RUST_LOG=info,blobasaur::cluster=debug
    command: >
      bash -c "
        echo 'Node2 Starting...';
        echo 'Hostname: $(hostname)';
        echo 'Network interfaces:';
        ip addr show;
        echo 'Checking binary compatibility...';
        if [ ! -f target/release/blobasaur ] || ! file target/release/blobasaur | grep -q 'ELF 64-bit LSB pie executable, x86-64'; then
          echo 'Building blobasaur for container architecture...';
          cargo build --release;
        else
          echo 'Using existing compatible binary...';
        fi;
        mkdir -p /app/data;
        echo 'Starting blobasaur node2...';
        exec ./target/release/blobasaur --config /app/config.toml
      "

  node3:
    image: rust:1.87
    container_name: blobasaur-node3
    # ports:
    #   - "6383:6379"
    #   - "7003:7000"
    volumes:
      - ../:/workspace
      - ./config.node3.toml:/app/config.toml:ro
      - node3_data:/app/data
      - cargo_cache:/usr/local/cargo/registry
    network_mode: host
    working_dir: /workspace
    environment:
      - RUST_LOG=info,blobasaur::cluster=debug
    command: >
      bash -c "
        echo 'Node3 Starting...';
        echo 'Hostname: $(hostname)';
        echo 'Network interfaces:';
        ip addr show;
        echo 'Checking binary compatibility...';
        if [ ! -f target/release/blobasaur ] || ! file target/release/blobasaur | grep -q 'ELF 64-bit LSB pie executable, x86-64'; then
          echo 'Building blobasaur for container architecture...';
          cargo build --release;
        else
          echo 'Using existing compatible binary...';
        fi;
        mkdir -p /app/data;
        echo 'Starting blobasaur node3...';
        exec ./target/release/blobasaur --config /app/config.toml
      "

# networks:
#   blobasaur-cluster:
#     driver: bridge

volumes:
  node1_data:
  node2_data:
  node3_data:
  cargo_cache:
